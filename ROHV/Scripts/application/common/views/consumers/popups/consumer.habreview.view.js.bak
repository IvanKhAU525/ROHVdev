define(function(require) {

    require('marionette');
    require('underscore');

    var BaseModel = require('models/consumer.habreview.model'),
        BaseView = require('views/base.view');

    return BaseView.extend({
        container: '<div id="hab-review-view"  class="modal fade" tabindex="-1" role="dialog"></div>',
        el: "#hab-review-view",
        employeesData: [],
        forceNew: false,
        events: function() {
            return {
                "click #save-modal": "onSave",
                "click #save-as-new-modal": "onSaveAsNew"
            }
        },
        initialize: function(options) {
            this.parentView = options.parentView;
        },

        appendContainer: function() {
            $("#modal-message-container").append(this.container);
        },

        template: function(serialized_model) {
            var templateHtml = $("#pop-template-habreview").html();
            var template = _.template(templateHtml);
            return template({ model: serialized_model });
        },
        serializeData: function() {
            var tmp = this.model;
            this.model = new BaseModel();
            if (tmp != null) {
                this.model.set(tmp);
            }
            return this.model;
        },
        onBeforeRender: function() {
        },

        onDomRefresh: function() {

        },
        onRender: function() {

            this.setField("#ServiceId");
            this.setEmployeeField("#CHCoordinatorId");
            this.setEmployeeField("#DHCoordinatorId");
            this.setEmployeeField("#ContactId");
            this.setEmployeeField("#MSCId");
            this.setAdvocateField("#AdvocateId");            
            this.setStates();
            this.model.setFormValidation();
            $('#DateReview').datepicker({ autoclose: true });
            $('#DateReview').inputmask();

        },
        getStateList:function() {
            var issues = this.model.get("ConsumerHabReviewIssueStates");
            var stateList = [];
            for (var issue in issues) {
                stateList.push(issue);
            }          
            return stateList;
        },
        setStates: function() {
            var stateList = this.getStateList();
            var issues = this.model.get("ConsumerHabReviewIssueStates");
            console.log(stateList);
            for (var i = 0; i < stateList.length; i++) {
                var stateName = stateList[i];
                var value = issues[stateName];
                console.log("value:" + value + " name:" + stateName);
                
                $('input[name="' + stateName + '"][value="' + value + '"]').prop('checked', true);                
            }
        },
        setAdvocateField: function(id) {
            var _this = this;
            $(id, "#hab-review-form").selectpicker({
                dropupAuto: false,
            }).ajaxSelectPicker({
                ajax: {
                    url: '/api/consumerapi/advocateslist/',
                    data: function() {
                        var params = {
                            q: '{{{q}}}'
                        };

                        return params;
                    }
                },
                locale: {
                    emptyTitle: 'Select an advocate...'
                },
                preprocessData: function(data) {
                    var result = [];
                    if (data.hasOwnProperty('data')) {
                        var len = data.data.length;
                        for (var i = 0; i < len; i++) {
                            var curr = data.data[i];
                            result.push(
                                {
                                    'value': curr.AdvocateId,
                                    'text': curr.LastName + ', ' + curr.FirstName,
                                    'data': {
                                        'icon': 'glyphicon-user',
                                        'subtext': curr.CompanyName + " (" + curr.City + ", " + curr.State + ")"
                                    },
                                    'disabled': false
                                }
                            );
                        }
                    }
                    return result;
                },
                preserveSelected: true,
                requestDelay: 100
            });
            var val = this.model.get(id.replace("#", ""));
            if (val != null) {
                $(id, "#hab-review-form").val(val);
                $(id, "#hab-review-form").selectpicker("refresh");
            }
        },
        setField: function(id) {
            var _this = this;
            $(id, "#hab-review-form").selectpicker({
                dropupAuto: false
            });
            $(id, "#hab-review-form").on('show.bs.select',
                function(e) {
                    _this.model.resetField($(id));
                });
            var val = this.model.get(id.replace("#", ""));
            if (val != null) {
                $(id, "#hab-review-form").val(val);
                $(id, "#hab-review-form").selectpicker("refresh");
            }
        },
        setEmployeeField: function(id) {

            $(id, "#hab-review-form").selectpicker({
                dropupAuto: false
            }).ajaxSelectPicker({
                ajax: {
                    url: '/api/consumerapi/searchingemployee/',
                    data: function() {
                        var params = {
                            q: '{{{q}}}'
                        };
                        return params;
                    }
                },
                locale: {
                    emptyTitle: 'Select employee name'
                },
                preprocessData: function(data) {
                    var result = [];
                    if (data.hasOwnProperty('data')) {
                        var len = data.data.length;
                        for (var i = 0; i < len; i++) {
                            var curr = data.data[i];
                            result.push(
                                {
                                    'value': curr.ContactId,
                                    'text': curr.LastName + ', ' + curr.FirstName,
                                    'data': {
                                        'icon': 'glyphicon-user',
                                        'subtext': curr.CompanyName
                                    },
                                    'disabled': false
                                }
                            );
                        }
                    }
                    return result;
                },
                processData: function() {
                },
                preserveSelected: true,
                clearOnEmpty: true,
                log: false,
                requestDelay: 100
            });
            var val = this.model.get(id.replace("#", ""));
            if (val != null) {
                $(id, "#hab-review-form").val(val);
                $(id, "#hab-review-form").selectpicker("refresh");
            }            
        },
        showModal: function() {

            var _this = this;
            this.$el.modal();

            this.$el.off('hidden.bs.modal');
            this.$el.on('hidden.bs.modal',
                function() {
                    _this.destroy();
                });
            this.$el.modal('show');

        },
        closeModal: function() {

            this.$el.modal('hide');

        },
        isEdit: function() {
            if (this.forceNew) return false;
            var isEdit = this.model.get("ConsumerHabReviewId") != null;
            return isEdit;
        },
        serializeIssues: function() {
            var stateList = this.getStateList();
            var result = {};
            for (var i = 0; i < stateList.length; i++) {
                var stateName = stateList[i];                
                var value = $('input[name="' + stateName + '"]:checked').val();
                if ($.isEmpty(value)) value = null; else value = parseInt(value);                
                result[stateName] = value;
            }
            return result;            
        },
        onSaveAsNew: function() {
            this.forceNew = true;
            this.onSave();
            this.forceNew = false;
        },
        onSave: function() {

            var _this = this;
            if (this.model.isValid()) {

                var obj = Utils.serializeForm(this.model.formId);
                obj.ServiceName = "";
                if (!$.isEmpty($("#ServiceId", "#hab-review-form").val())) {
                    obj.ServiceName = $.trim($("option:selected", $("#ServiceId", "#hab-review-form")).html());
                }
                obj.AdvocateName = "";
                if (!$.isEmpty($("#AdvocateId", "#hab-review-form").val())) {
                    obj.AdvocateName = $.trim($("option:selected", $("#AdvocateId", "#hab-review-form")).html());
                }
                obj.CHCoordinatorName = "";
                if (!$.isEmpty($("#CHCoordinatorId", "#hab-review-form").val())) {
                    obj.CHCoordinatorName =
                        $.trim($("option:selected", $("#CHCoordinatorId", "#hab-review-form")).html());
                }
                obj.DHCoordinatorName = "";
                if (!$.isEmpty($("#DHCoordinatorId", "#hab-review-form").val())) {
                    obj.DHCoordinatorName =
                        $.trim($("option:selected", $("#DHCoordinatorId", "#hab-review-form")).html());
                }
                obj.MSCName = "";
                if (!$.isEmpty($("#MSCId", "#hab-review-form").val())) {
                    obj.MSCName = $.trim($("option:selected", $("#MSCId", "#hab-review-form")).html());
                }
                obj.EmployeeName = "";
                if (!$.isEmpty($("#ContactId", "#hab-review-form").val())) {
                    obj.EmployeeName = $.trim($("option:selected", $("#ContactId", "#hab-review-form")).html());
                }
                obj.ConsumerId = this.parentView.model.get("ConsumerId");
                obj.ConsumerHabReviewIssueStates = this.serializeIssues();

                if (this.isEdit()) {
                    obj.UpdatedById = CurrentUserInfo.Id;
                    obj.DateUpdated = Utils.getCurrentDate();
                    obj.UpdatedByName = CurrentUserInfo.Name;
                    obj.AddedById = this.model.get("AddedById");
                    obj.DateCreated = this.model.get("DateCreated");
                    obj.AddedByName = this.model.get("AddedByName");
                    obj.ConsumerHabReviewId = this.model.get("ConsumerHabReviewId");
                } else {
                    obj.AddedById = CurrentUserInfo.Id;
                    obj.DateCreated = Utils.getCurrentDate();
                    obj.AddedByName = CurrentUserInfo.Name;
                    obj.UpdatedById = null;
                    obj.DateUpdated = "";
                    obj.UpdatedByName = "";
                    obj.ConsumerHabReviewId = null;
                }

                this.model.parseObj(obj);
                var returnObj = this.model.getObject();

                var isUpdate = this.isEdit();
                if ($.isEmpty(obj.ConsumerId)) {
                    this.parentView.onPopupSave(returnObj);
                } else {
                    var success = function(responce) {
                        returnObj["ConsumerHabReviewId"] = responce.id;
                        returnObj["isUpdate"] = isUpdate;
                        _this.parentView.onPopupSave(returnObj);
                    };
                    this.model.postData(success);
                }
            }
        }
    }); /*.end module*/

}); /*.end defined*/